services:

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - web
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: ./celery
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./celery
          target: /app
    command: celery -A celery worker --loglevel=INFO
    networks:
      - web
    environment:
      CELERY_BROKER_URL: redis://redis:6379
    depends_on:
      - redis

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - web
    command: redis-server

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    networks:
      - web
    depends_on:
      - backend

  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    ports:
      - "9000:3000"
    command: ./run.sh
    networks:
      - web
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_SECURITY_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_SECURITY_PASSWORD}
    depends_on:
      - prometheus

networks:
  web:


volumes:
  postgres_data:
  redis_data:
